# -*- coding: utf-8 -*-
"""sampling_PGA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JzGTgRmyRkBqKlv4amVVFKlNJtZBwCia

<a href="https://colab.research.google.com/github/37stu37/FFE/blob/master/sampling_PGA.ipynb" target="_parent"><img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/></a>
"""

# Commented out IPython magic to ensure Python compatibility.
# %%time 
# %%capture
# !apt update
# !apt upgrade
# !apt install gdal-bin python-gdal python3-gdal 
# # Install rtree - Geopandas requirment
# !apt install python3-rtree 
# # Install Geopandas
# !pip install git+git://github.com/geopandas/geopandas.git
# # Install descartes - Geopandas requirment
# !pip install descartes
# # loading package
# !pip install ipynb

# Commented out IPython magic to ensure Python compatibility.
# Load the Drive helper and mount
from google.colab import drive
# %tensorflow_version 2.x
# This will prompt for authorization.
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
import glob
from math import sqrt
import os
import matplotlib.pyplot as plt
from matplotlib.pyplot import imshow
import numpy as np
import pandas as pd
import geopandas as gpd
import math

# %matplotlib inline

path = '/content/drive/My Drive/05_Sync/FFE/FireNetwork/00_input'
!ls '/content/drive/My Drive/05_Sync/FFE/FireNetwork/00_input'

# SA2 input data
SA2 = gpd.read_file(os.path.join(path, "SA2.shp"))
# PGA input data
PGA = gpd.read_file(os.path.join(path, "WellWHV.shp"))
# buildings data
buildings = gpd.read_file(os.path.join(path, "buildings_raw.shp"))

SA2.columns, PGA.columns, buildings.columns

#plot
fig, (ax1, ax2, ax3) = plt.subplots(ncols=3, sharex=True, sharey=True)
fig.suptitle('SA2 / PGA / buildings')
SA2.plot(ax=ax1, column='SA2_ID')
PGA.plot(ax=ax2, column='SA2')
buildings.plot(ax=ax3, column='suburb_loc')

def Ignition_Probability(SA_data, PGA_data, percentile, building_data):
  data = SA_data.merge(PGA_data, how='left', left_on='SA2_ID', right_on='SA2')
  data['SA_IgnPrb'] = 1/(np.exp(-1*(-6.755+8.463+data[percentile]+0.0000984+data['PopDensity']+0.001523+data['BldgFloo_1'])))
  data['IgnProb_bl'] = 1 - np.power(1-data['SA_IgnPrb'], +1/data['NumberBldg'])
  data.drop('geometry_y', axis=1, inplace=True)
  data.rename(columns={'geometry_x': 'geometry'}, inplace=True)
  crs = {'init': 'EPSG:2193'}
  data_gdf = gpd.GeoDataFrame(data)
  buildings_with_ignition = gpd.sjoin(building_data, data_gdf, how='inner', op='within')
  buildings_with_ignition = buildings_with_ignition[['TARGET_FID', 'suburb_loc', 'Combustibl', 'SHAPE_Leng', 'SHAPE_Area',
       'AU2013Num', 'IgnProb_bl_left', 'RandProb', 'geometry']]
  buildings_with_ignition.rename(columns={'IgnProb_bl_left': 'IgnProb_bl'}, inplace=True)
  return buildings_with_ignition

buildings_Ign = Ignition_Probability(SA2, PGA, buildings)

buildings_Ign.columns

buildings_Ign.plot(column='IgnProb_bl', legend=True)

buildings.plot(column='IgnProb_bl', legend=True)

