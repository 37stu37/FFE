import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
var DEFAULT_BATCH_SIZE = 100;

var TableBatchBuilder = function () {
  function TableBatchBuilder(TableBatchType, schema) {
    var batchSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_BATCH_SIZE;
    var options = arguments.length > 3 ? arguments[3] : undefined;

    _classCallCheck(this, TableBatchBuilder);

    this.TableBatchType = TableBatchType;
    this.schema = schema;
    this.batchSize = batchSize;
    this.batch = null;
    this.batchCount = 0;
    this.bytesUsed = 0;
    this.options = options;
  }

  _createClass(TableBatchBuilder, [{
    key: "addRow",
    value: function addRow(row) {
      if (!this.batch) {
        var TableBatchType = this.TableBatchType;
        this.batch = new TableBatchType(this.schema, this.batchSize, this.options);
      }

      this.batch.addRow(row);
    }
  }, {
    key: "chunkComplete",
    value: function chunkComplete(chunk) {
      this.bytesUsed += chunk.byteLength || chunk.length || 0;

      if (this.batch) {
        this.batch.chunkComplete();
      }
    }
  }, {
    key: "isFull",
    value: function isFull() {
      return this.batch && this.batch.isFull();
    }
  }, {
    key: "hasBatch",
    value: function hasBatch() {
      return Boolean(this.batch);
    }
  }, {
    key: "getBatch",
    value: function getBatch() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      if (Number.isFinite(options.bytesUsed)) {
        this.bytesUsed = options.bytesUsed;
      }

      if (this.batch) {
        var normalizedBatch = this.batch.getBatch();
        this.batch = null;
        normalizedBatch.count = this.batchCount;
        this.batchCount++;
        normalizedBatch.bytesUsed = this.bytesUsed;
        Object.assign(normalizedBatch, options);
        return normalizedBatch;
      }

      return null;
    }
  }]);

  return TableBatchBuilder;
}();

export { TableBatchBuilder as default };
//# sourceMappingURL=table-batch-builder.js.map